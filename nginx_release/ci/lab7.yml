---
jobs:
- name: job-upload-release
  public: true
  plan:
  - get: source-code
    trigger: true
    params: { depth: 1 }
  - task: upload-release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: starkandwayne/concourse}
      run:
        path: source-code/nginx_release/ci/tasks/upload-release-with-vars.sh
      params:
        BOSH_DEPLOYMENT: (( grab bosh.deployment ))
        BOSH_CLIENT: (( grab bosh.client_user ))
        BOSH_CLIENT_SECRET: (( grab bosh.client_user_secret ))
        BOSH_ENVIRONMENT: (( grab bosh.url ))
        BOSH_CA_CERT: (( grab bosh.ca_cert ))
      inputs:
        - name: source-code
- name: job-deploy-release
  public: true
  plan:
  - get: source-code
    trigger: true
    passed: [job-upload-release]
    params: { depth: 1 }
  - task: deploy-release
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: starkandwayne/concourse}
      run:
        path: source-code/nginx_release/ci/tasks/deploy-release-with-vars.sh
      params:
        BOSH_DEPLOYMENT: (( grab bosh.deployment ))
        BOSH_CLIENT: (( grab bosh.client_user ))
        BOSH_CLIENT_SECRET: (( grab bosh.client_user_secret ))
        BOSH_ENVIRONMENT: (( grab bosh.url ))
        BOSH_CA_CERT: (( grab bosh.ca_cert ))
      inputs:
        - name: source-code

resources:
- name: source-code
  type: git
  source:
    uri: (( grab github.repository ))
    branch: (( grab github.branch ))
